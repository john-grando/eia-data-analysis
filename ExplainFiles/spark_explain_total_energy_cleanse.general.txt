== Parsed Logical Plan ==
Project [CASE WHEN (category_id#7 = ) THEN cast(null as string) WHEN (category_id#7 = null) THEN cast(null as string) ELSE category_id#7 END AS category_id#182, CASE WHEN (childseries#137 = ) THEN cast(null as string) WHEN (childseries#137 = null) THEN cast(null as string) ELSE childseries#137 END AS childseries#183, CASE WHEN (data#120 = ) THEN cast(null as string) WHEN (data#120 = null) THEN cast(null as string) ELSE data#120 END AS data#184, CASE WHEN (end#10 = ) THEN cast(null as string) WHEN (end#10 = null) THEN cast(null as string) ELSE end#10 END AS end#185, CASE WHEN (f#11 = ) THEN cast(null as string) WHEN (f#11 = null) THEN cast(null as string) ELSE f#11 END AS f#186, CASE WHEN (last_updated#12 = ) THEN cast(null as string) WHEN (last_updated#12 = null) THEN cast(null as string) ELSE last_updated#12 END AS last_updated#187, CASE WHEN (name#31 = ) THEN cast(null as string) WHEN (name#31 = null) THEN cast(null as string) ELSE name#31 END AS name#188, CASE WHEN (notes#14 = ) THEN cast(null as string) WHEN (notes#14 = null) THEN cast(null as string) ELSE notes#14 END AS notes#189, CASE WHEN (parent_category_id#15 = ) THEN cast(null as string) WHEN (parent_category_id#15 = null) THEN cast(null as string) ELSE parent_category_id#15 END AS parent_category_id#190, CASE WHEN (series_id#44 = ) THEN cast(null as string) WHEN (series_id#44 = null) THEN cast(null as string) ELSE series_id#44 END AS series_id#191, CASE WHEN (start#17 = ) THEN cast(null as string) WHEN (start#17 = null) THEN cast(null as string) ELSE start#17 END AS start#192, CASE WHEN (units#18 = ) THEN cast(null as string) WHEN (units#18 = null) THEN cast(null as string) ELSE units#18 END AS units#193, date#87, CASE WHEN (value#103 = ) THEN cast(null as string) WHEN (value#103 = null) THEN cast(null as string) ELSE value#103 END AS value#194]
+- Project [category_id#7, childseries#137, data#120, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, date#87, value#103]
   +- Project [category_id#7, concat_ws(, , childseries#8) AS childseries#137, data#120, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, date#87, value#103]
      +- Project [category_id#7, childseries#8, concat_ws(, , data_exploded#58) AS data#120, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, date#87, value#103]
         +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, date#87, data_exploded#58[1] AS value#103]
            +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, to_date(cast(unix_timestamp('date_raw, yyyyMM, None) as timestamp), None) AS date#87]
               +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, data_exploded#58[0] AS date_raw#72]
                  +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58]
                     +- Generate explode(data#9), false, [data_exploded#58]
                        +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, regexp_replace(series_id#16, ^[^.]+\.([^.]+)(\..*)*, $1) AS series_id#44, start#17, units#18]
                           +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, regexp_replace(name#13, ^(.*)(, Monthly)$, $1) AS name#31, notes#14, parent_category_id#15, series_id#16, start#17, units#18]
                              +- Filter (f#11 = M)
                                 +- Relation[category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] json

== Analyzed Logical Plan ==
category_id: string, childseries: string, data: string, end: string, f: string, last_updated: string, name: string, notes: string, parent_category_id: string, series_id: string, start: string, units: string, date: date, value: string
Project [CASE WHEN (category_id#7 = ) THEN cast(null as string) WHEN (category_id#7 = null) THEN cast(null as string) ELSE category_id#7 END AS category_id#182, CASE WHEN (childseries#137 = ) THEN cast(null as string) WHEN (childseries#137 = null) THEN cast(null as string) ELSE childseries#137 END AS childseries#183, CASE WHEN (data#120 = ) THEN cast(null as string) WHEN (data#120 = null) THEN cast(null as string) ELSE data#120 END AS data#184, CASE WHEN (end#10 = ) THEN cast(null as string) WHEN (end#10 = null) THEN cast(null as string) ELSE end#10 END AS end#185, CASE WHEN (f#11 = ) THEN cast(null as string) WHEN (f#11 = null) THEN cast(null as string) ELSE f#11 END AS f#186, CASE WHEN (last_updated#12 = ) THEN cast(null as string) WHEN (last_updated#12 = null) THEN cast(null as string) ELSE last_updated#12 END AS last_updated#187, CASE WHEN (name#31 = ) THEN cast(null as string) WHEN (name#31 = null) THEN cast(null as string) ELSE name#31 END AS name#188, CASE WHEN (notes#14 = ) THEN cast(null as string) WHEN (notes#14 = null) THEN cast(null as string) ELSE notes#14 END AS notes#189, CASE WHEN (parent_category_id#15 = ) THEN cast(null as string) WHEN (parent_category_id#15 = null) THEN cast(null as string) ELSE parent_category_id#15 END AS parent_category_id#190, CASE WHEN (series_id#44 = ) THEN cast(null as string) WHEN (series_id#44 = null) THEN cast(null as string) ELSE series_id#44 END AS series_id#191, CASE WHEN (start#17 = ) THEN cast(null as string) WHEN (start#17 = null) THEN cast(null as string) ELSE start#17 END AS start#192, CASE WHEN (units#18 = ) THEN cast(null as string) WHEN (units#18 = null) THEN cast(null as string) ELSE units#18 END AS units#193, date#87, CASE WHEN (value#103 = ) THEN cast(null as string) WHEN (value#103 = null) THEN cast(null as string) ELSE value#103 END AS value#194]
+- Project [category_id#7, childseries#137, data#120, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, date#87, value#103]
   +- Project [category_id#7, concat_ws(, , childseries#8) AS childseries#137, data#120, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, date#87, value#103]
      +- Project [category_id#7, childseries#8, concat_ws(, , data_exploded#58) AS data#120, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, date#87, value#103]
         +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, date#87, data_exploded#58[1] AS value#103]
            +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, date_raw#72, to_date(cast(unix_timestamp('date_raw, yyyyMM, None) as timestamp), None) AS date#87]
               +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58, data_exploded#58[0] AS date_raw#72]
                  +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18, data_exploded#58]
                     +- Generate explode(data#9), false, [data_exploded#58]
                        +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, regexp_replace(series_id#16, ^[^.]+\.([^.]+)(\..*)*, $1) AS series_id#44, start#17, units#18]
                           +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, regexp_replace(name#13, ^(.*)(, Monthly)$, $1) AS name#31, notes#14, parent_category_id#15, series_id#16, start#17, units#18]
                              +- Filter (f#11 = M)
                                 +- Relation[category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] json

== Optimized Logical Plan ==
Project [CASE WHEN (category_id#7 = ) THEN null WHEN (category_id#7 = null) THEN null ELSE category_id#7 END AS category_id#182, CASE WHEN (concat_ws(, , childseries#8) = ) THEN null WHEN (concat_ws(, , childseries#8) = null) THEN null ELSE concat_ws(, , childseries#8) END AS childseries#183, CASE WHEN (concat_ws(, , data_exploded#58) = ) THEN null WHEN (concat_ws(, , data_exploded#58) = null) THEN null ELSE concat_ws(, , data_exploded#58) END AS data#184, CASE WHEN (end#10 = ) THEN null WHEN (end#10 = null) THEN null ELSE end#10 END AS end#185, CASE WHEN (f#11 = ) THEN null WHEN (f#11 = null) THEN null ELSE f#11 END AS f#186, CASE WHEN (last_updated#12 = ) THEN null WHEN (last_updated#12 = null) THEN null ELSE last_updated#12 END AS last_updated#187, CASE WHEN (name#31 = ) THEN null WHEN (name#31 = null) THEN null ELSE name#31 END AS name#188, CASE WHEN (notes#14 = ) THEN null WHEN (notes#14 = null) THEN null ELSE notes#14 END AS notes#189, CASE WHEN (parent_category_id#15 = ) THEN null WHEN (parent_category_id#15 = null) THEN null ELSE parent_category_id#15 END AS parent_category_id#190, CASE WHEN (series_id#44 = ) THEN null WHEN (series_id#44 = null) THEN null ELSE series_id#44 END AS series_id#191, CASE WHEN (start#17 = ) THEN null WHEN (start#17 = null) THEN null ELSE start#17 END AS start#192, CASE WHEN (units#18 = ) THEN null WHEN (units#18 = null) THEN null ELSE units#18 END AS units#193, cast(cast(unix_timestamp(data_exploded#58[0], yyyyMM, Some(America/New_York)) as timestamp) as date) AS date#87, CASE WHEN (data_exploded#58[1] = ) THEN null WHEN (data_exploded#58[1] = null) THEN null ELSE data_exploded#58[1] END AS value#194]
+- Generate explode(data#9), [2], false, [data_exploded#58]
   +- Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, regexp_replace(name#13, ^(.*)(, Monthly)$, $1) AS name#31, notes#14, parent_category_id#15, regexp_replace(series_id#16, ^[^.]+\.([^.]+)(\..*)*, $1) AS series_id#44, start#17, units#18]
      +- Filter (isnotnull(f#11) AND (f#11 = M))
         +- Relation[category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] json

== Physical Plan ==
*(2) Project [CASE WHEN (category_id#7 = ) THEN null WHEN (category_id#7 = null) THEN null ELSE category_id#7 END AS category_id#182, CASE WHEN (concat_ws(, , childseries#8) = ) THEN null WHEN (concat_ws(, , childseries#8) = null) THEN null ELSE concat_ws(, , childseries#8) END AS childseries#183, CASE WHEN (concat_ws(, , data_exploded#58) = ) THEN null WHEN (concat_ws(, , data_exploded#58) = null) THEN null ELSE concat_ws(, , data_exploded#58) END AS data#184, CASE WHEN (end#10 = ) THEN null WHEN (end#10 = null) THEN null ELSE end#10 END AS end#185, CASE WHEN (f#11 = ) THEN null WHEN (f#11 = null) THEN null ELSE f#11 END AS f#186, CASE WHEN (last_updated#12 = ) THEN null WHEN (last_updated#12 = null) THEN null ELSE last_updated#12 END AS last_updated#187, CASE WHEN (name#31 = ) THEN null WHEN (name#31 = null) THEN null ELSE name#31 END AS name#188, CASE WHEN (notes#14 = ) THEN null WHEN (notes#14 = null) THEN null ELSE notes#14 END AS notes#189, CASE WHEN (parent_category_id#15 = ) THEN null WHEN (parent_category_id#15 = null) THEN null ELSE parent_category_id#15 END AS parent_category_id#190, CASE WHEN (series_id#44 = ) THEN null WHEN (series_id#44 = null) THEN null ELSE series_id#44 END AS series_id#191, CASE WHEN (start#17 = ) THEN null WHEN (start#17 = null) THEN null ELSE start#17 END AS start#192, CASE WHEN (units#18 = ) THEN null WHEN (units#18 = null) THEN null ELSE units#18 END AS units#193, cast(cast(unix_timestamp(data_exploded#58[0], yyyyMM, Some(America/New_York)) as timestamp) as date) AS date#87, CASE WHEN (data_exploded#58[1] = ) THEN null WHEN (data_exploded#58[1] = null) THEN null ELSE data_exploded#58[1] END AS value#194]
+- Generate explode(data#9), [category_id#7, childseries#8, end#10, f#11, last_updated#12, name#31, notes#14, parent_category_id#15, series_id#44, start#17, units#18], false, [data_exploded#58]
   +- *(1) Project [category_id#7, childseries#8, data#9, end#10, f#11, last_updated#12, regexp_replace(name#13, ^(.*)(, Monthly)$, $1) AS name#31, notes#14, parent_category_id#15, regexp_replace(series_id#16, ^[^.]+\.([^.]+)(\..*)*, $1) AS series_id#44, start#17, units#18]
      +- *(1) Filter (isnotnull(f#11) AND (f#11 = M))
         +- FileScan json [category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] Batched: false, DataFilters: [isnotnull(f#11), (f#11 = M)], Format: JSON, Location: InMemoryFileIndex[hdfs://localhost:9000/EIATotal/TOTAL.json], PartitionFilters: [], PushedFilters: [IsNotNull(f), EqualTo(f,M)], ReadSchema: struct<category_id:string,childseries:array<string>,data:array<array<string>>,end:string,f:string...
