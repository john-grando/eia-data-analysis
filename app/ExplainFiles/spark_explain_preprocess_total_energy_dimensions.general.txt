== Parsed Logical Plan ==
Project [CASE WHEN (category_id#7 = ) THEN cast(null as string) WHEN (category_id#7 = null) THEN cast(null as string) ELSE category_id#7 END AS category_id#65, CASE WHEN (childseries#42 = ) THEN cast(null as string) WHEN (childseries#42 = null) THEN cast(null as string) ELSE childseries#42 END AS childseries#66, CASE WHEN (end#10 = ) THEN cast(null as string) WHEN (end#10 = null) THEN cast(null as string) ELSE end#10 END AS end#67, CASE WHEN (f#11 = ) THEN cast(null as string) WHEN (f#11 = null) THEN cast(null as string) ELSE f#11 END AS f#68, CASE WHEN (last_updated#12 = ) THEN cast(null as string) WHEN (last_updated#12 = null) THEN cast(null as string) ELSE last_updated#12 END AS last_updated#69, CASE WHEN (name#13 = ) THEN cast(null as string) WHEN (name#13 = null) THEN cast(null as string) ELSE name#13 END AS name#70, CASE WHEN (notes#14 = ) THEN cast(null as string) WHEN (notes#14 = null) THEN cast(null as string) ELSE notes#14 END AS notes#71, CASE WHEN (parent_category_id#15 = ) THEN cast(null as string) WHEN (parent_category_id#15 = null) THEN cast(null as string) ELSE parent_category_id#15 END AS parent_category_id#72, CASE WHEN (series_id#16 = ) THEN cast(null as string) WHEN (series_id#16 = null) THEN cast(null as string) ELSE series_id#16 END AS series_id#73, CASE WHEN (start#17 = ) THEN cast(null as string) WHEN (start#17 = null) THEN cast(null as string) ELSE start#17 END AS start#74, CASE WHEN (units#18 = ) THEN cast(null as string) WHEN (units#18 = null) THEN cast(null as string) ELSE units#18 END AS units#75]
+- Project [category_id#7, concat_ws(, , childseries#8) AS childseries#42, end#10, f#11, last_updated#12, name#13, notes#14, parent_category_id#15, series_id#16, start#17, units#18]
   +- Project [category_id#7, childseries#8, end#10, f#11, last_updated#12, name#13, notes#14, parent_category_id#15, series_id#16, start#17, units#18]
      +- Filter (f#11 = M)
         +- Relation[category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] json

== Analyzed Logical Plan ==
category_id: string, childseries: string, end: string, f: string, last_updated: string, name: string, notes: string, parent_category_id: string, series_id: string, start: string, units: string
Project [CASE WHEN (category_id#7 = ) THEN cast(null as string) WHEN (category_id#7 = null) THEN cast(null as string) ELSE category_id#7 END AS category_id#65, CASE WHEN (childseries#42 = ) THEN cast(null as string) WHEN (childseries#42 = null) THEN cast(null as string) ELSE childseries#42 END AS childseries#66, CASE WHEN (end#10 = ) THEN cast(null as string) WHEN (end#10 = null) THEN cast(null as string) ELSE end#10 END AS end#67, CASE WHEN (f#11 = ) THEN cast(null as string) WHEN (f#11 = null) THEN cast(null as string) ELSE f#11 END AS f#68, CASE WHEN (last_updated#12 = ) THEN cast(null as string) WHEN (last_updated#12 = null) THEN cast(null as string) ELSE last_updated#12 END AS last_updated#69, CASE WHEN (name#13 = ) THEN cast(null as string) WHEN (name#13 = null) THEN cast(null as string) ELSE name#13 END AS name#70, CASE WHEN (notes#14 = ) THEN cast(null as string) WHEN (notes#14 = null) THEN cast(null as string) ELSE notes#14 END AS notes#71, CASE WHEN (parent_category_id#15 = ) THEN cast(null as string) WHEN (parent_category_id#15 = null) THEN cast(null as string) ELSE parent_category_id#15 END AS parent_category_id#72, CASE WHEN (series_id#16 = ) THEN cast(null as string) WHEN (series_id#16 = null) THEN cast(null as string) ELSE series_id#16 END AS series_id#73, CASE WHEN (start#17 = ) THEN cast(null as string) WHEN (start#17 = null) THEN cast(null as string) ELSE start#17 END AS start#74, CASE WHEN (units#18 = ) THEN cast(null as string) WHEN (units#18 = null) THEN cast(null as string) ELSE units#18 END AS units#75]
+- Project [category_id#7, concat_ws(, , childseries#8) AS childseries#42, end#10, f#11, last_updated#12, name#13, notes#14, parent_category_id#15, series_id#16, start#17, units#18]
   +- Project [category_id#7, childseries#8, end#10, f#11, last_updated#12, name#13, notes#14, parent_category_id#15, series_id#16, start#17, units#18]
      +- Filter (f#11 = M)
         +- Relation[category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] json

== Optimized Logical Plan ==
Project [CASE WHEN (category_id#7 = ) THEN null WHEN (category_id#7 = null) THEN null ELSE category_id#7 END AS category_id#65, CASE WHEN (concat_ws(, , childseries#8) = ) THEN null WHEN (concat_ws(, , childseries#8) = null) THEN null ELSE concat_ws(, , childseries#8) END AS childseries#66, CASE WHEN (end#10 = ) THEN null WHEN (end#10 = null) THEN null ELSE end#10 END AS end#67, CASE WHEN (f#11 = ) THEN null WHEN (f#11 = null) THEN null ELSE f#11 END AS f#68, CASE WHEN (last_updated#12 = ) THEN null WHEN (last_updated#12 = null) THEN null ELSE last_updated#12 END AS last_updated#69, CASE WHEN (name#13 = ) THEN null WHEN (name#13 = null) THEN null ELSE name#13 END AS name#70, CASE WHEN (notes#14 = ) THEN null WHEN (notes#14 = null) THEN null ELSE notes#14 END AS notes#71, CASE WHEN (parent_category_id#15 = ) THEN null WHEN (parent_category_id#15 = null) THEN null ELSE parent_category_id#15 END AS parent_category_id#72, CASE WHEN (series_id#16 = ) THEN null WHEN (series_id#16 = null) THEN null ELSE series_id#16 END AS series_id#73, CASE WHEN (start#17 = ) THEN null WHEN (start#17 = null) THEN null ELSE start#17 END AS start#74, CASE WHEN (units#18 = ) THEN null WHEN (units#18 = null) THEN null ELSE units#18 END AS units#75]
+- Filter (isnotnull(f#11) AND (f#11 = M))
   +- Relation[category_id#7,childseries#8,data#9,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] json

== Physical Plan ==
*(1) Project [CASE WHEN (category_id#7 = ) THEN null WHEN (category_id#7 = null) THEN null ELSE category_id#7 END AS category_id#65, CASE WHEN (concat_ws(, , childseries#8) = ) THEN null WHEN (concat_ws(, , childseries#8) = null) THEN null ELSE concat_ws(, , childseries#8) END AS childseries#66, CASE WHEN (end#10 = ) THEN null WHEN (end#10 = null) THEN null ELSE end#10 END AS end#67, CASE WHEN (f#11 = ) THEN null WHEN (f#11 = null) THEN null ELSE f#11 END AS f#68, CASE WHEN (last_updated#12 = ) THEN null WHEN (last_updated#12 = null) THEN null ELSE last_updated#12 END AS last_updated#69, CASE WHEN (name#13 = ) THEN null WHEN (name#13 = null) THEN null ELSE name#13 END AS name#70, CASE WHEN (notes#14 = ) THEN null WHEN (notes#14 = null) THEN null ELSE notes#14 END AS notes#71, CASE WHEN (parent_category_id#15 = ) THEN null WHEN (parent_category_id#15 = null) THEN null ELSE parent_category_id#15 END AS parent_category_id#72, CASE WHEN (series_id#16 = ) THEN null WHEN (series_id#16 = null) THEN null ELSE series_id#16 END AS series_id#73, CASE WHEN (start#17 = ) THEN null WHEN (start#17 = null) THEN null ELSE start#17 END AS start#74, CASE WHEN (units#18 = ) THEN null WHEN (units#18 = null) THEN null ELSE units#18 END AS units#75]
+- *(1) Filter (isnotnull(f#11) AND (f#11 = M))
   +- FileScan json [category_id#7,childseries#8,end#10,f#11,last_updated#12,name#13,notes#14,parent_category_id#15,series_id#16,start#17,units#18] Batched: false, DataFilters: [isnotnull(f#11), (f#11 = M)], Format: JSON, Location: InMemoryFileIndex[hdfs://localhost:9000/EIATotal/TOTAL.json], PartitionFilters: [], PushedFilters: [IsNotNull(f), EqualTo(f,M)], ReadSchema: struct<category_id:string,childseries:array<string>,end:string,f:string,last_updated:string,name:...
