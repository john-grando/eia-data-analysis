== Parsed Logical Plan ==
Project [CASE WHEN (copyright#0 = ) THEN cast(null as string) WHEN (copyright#0 = null) THEN cast(null as string) ELSE copyright#0 END AS copyright#1116, CASE WHEN (description#1 = ) THEN cast(null as string) WHEN (description#1 = null) THEN cast(null as string) ELSE description#1 END AS description#1117, end#142, CASE WHEN (f#3 = ) THEN cast(null as string) WHEN (f#3 = null) THEN cast(null as string) ELSE f#3 END AS f#1118, CASE WHEN (geography#4 = ) THEN cast(null as string) WHEN (geography#4 = null) THEN cast(null as string) ELSE geography#4 END AS geography#1119, CASE WHEN (iso3166#5 = ) THEN cast(null as string) WHEN (iso3166#5 = null) THEN cast(null as string) ELSE iso3166#5 END AS iso3166#1120, lat#97, lon#112, CASE WHEN (name#9 = ) THEN cast(null as string) WHEN (name#9 = null) THEN cast(null as string) ELSE name#9 END AS name#1121, CASE WHEN (source#10 = ) THEN cast(null as string) WHEN (source#10 = null) THEN cast(null as string) ELSE source#10 END AS source#1122, start#127, CASE WHEN (units#12 = ) THEN cast(null as string) WHEN (units#12 = null) THEN cast(null as string) ELSE units#12 END AS units#1123, last_updated#82, CASE WHEN (series_id#14 = ) THEN cast(null as string) WHEN (series_id#14 = null) THEN cast(null as string) ELSE series_id#14 END AS series_id#1124, CASE WHEN (value_type#459 = ) THEN cast(null as string) WHEN (value_type#459 = null) THEN cast(null as string) ELSE value_type#459 END AS value_type#1125, CASE WHEN (fuel_type#476 = ) THEN cast(null as string) WHEN (fuel_type#476 = null) THEN cast(null as string) ELSE fuel_type#476 END AS fuel_type#1126, CASE WHEN (region#494 = ) THEN cast(null as string) WHEN (region#494 = null) THEN cast(null as string) ELSE region#494 END AS region#1127, CASE WHEN (sector#513 = ) THEN cast(null as string) WHEN (sector#513 = null) THEN cast(null as string) ELSE sector#513 END AS sector#1128, CASE WHEN (frequency#533 = ) THEN cast(null as string) WHEN (frequency#533 = null) THEN cast(null as string) ELSE frequency#533 END AS frequency#1129]
+- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, value_type#459, fuel_type#476, region#494, sector#513, frequency#533]
   +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, fuel_type#476, region#494, sector#513, trim(split_name#157[4], None) AS frequency#533]
      +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, fuel_type#476, region#494, trim(split_name#157[3], None) AS sector#513]
         +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, fuel_type#476, trim(split_name#157[2], None) AS region#494]
            +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, trim(split_name#157[1], None) AS fuel_type#476]
               +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, trim(split_name#157[0], None) AS value_type#459]
                  +- Filter series_id#14 RLIKE ^ELEC\.STOCKS\.|^ELEC\.RECEIPTS\.|^ELEC\.RECEIPTS_BTU\.|^ELEC\.COST\.|^ELEC\.COST_BTU\.
                     +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split(name#9, :, -1) AS split_name#157]
                        +- Project [copyright#0, description#1, to_date(cast(unix_timestamp('end, yyyyMM, None) as timestamp), None) AS end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14]
                           +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, to_date(cast(unix_timestamp('start, yyyyMM, None) as timestamp), None) AS start#127, units#12, last_updated#82, series_id#14]
                              +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, cast(lat#97 as double) AS lon#112, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                 +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, cast(lat#6 as double) AS lat#97, lon#8, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                    +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, to_timestamp('last_updated, Some(yyyy-MM-dd'T'HH:mm:ssXXX)) AS last_updated#82, series_id#14]
                                       +- Filter isnotnull(series_id#14)
                                          +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14]
                                             +- Filter (f#3 = M)
                                                +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Analyzed Logical Plan ==
copyright: string, description: string, end: date, f: string, geography: string, iso3166: string, lat: double, lon: double, name: string, source: string, start: date, units: string, last_updated: timestamp, series_id: string, value_type: string, fuel_type: string, region: string, sector: string, frequency: string
Project [CASE WHEN (copyright#0 = ) THEN cast(null as string) WHEN (copyright#0 = null) THEN cast(null as string) ELSE copyright#0 END AS copyright#1116, CASE WHEN (description#1 = ) THEN cast(null as string) WHEN (description#1 = null) THEN cast(null as string) ELSE description#1 END AS description#1117, end#142, CASE WHEN (f#3 = ) THEN cast(null as string) WHEN (f#3 = null) THEN cast(null as string) ELSE f#3 END AS f#1118, CASE WHEN (geography#4 = ) THEN cast(null as string) WHEN (geography#4 = null) THEN cast(null as string) ELSE geography#4 END AS geography#1119, CASE WHEN (iso3166#5 = ) THEN cast(null as string) WHEN (iso3166#5 = null) THEN cast(null as string) ELSE iso3166#5 END AS iso3166#1120, lat#97, lon#112, CASE WHEN (name#9 = ) THEN cast(null as string) WHEN (name#9 = null) THEN cast(null as string) ELSE name#9 END AS name#1121, CASE WHEN (source#10 = ) THEN cast(null as string) WHEN (source#10 = null) THEN cast(null as string) ELSE source#10 END AS source#1122, start#127, CASE WHEN (units#12 = ) THEN cast(null as string) WHEN (units#12 = null) THEN cast(null as string) ELSE units#12 END AS units#1123, last_updated#82, CASE WHEN (series_id#14 = ) THEN cast(null as string) WHEN (series_id#14 = null) THEN cast(null as string) ELSE series_id#14 END AS series_id#1124, CASE WHEN (value_type#459 = ) THEN cast(null as string) WHEN (value_type#459 = null) THEN cast(null as string) ELSE value_type#459 END AS value_type#1125, CASE WHEN (fuel_type#476 = ) THEN cast(null as string) WHEN (fuel_type#476 = null) THEN cast(null as string) ELSE fuel_type#476 END AS fuel_type#1126, CASE WHEN (region#494 = ) THEN cast(null as string) WHEN (region#494 = null) THEN cast(null as string) ELSE region#494 END AS region#1127, CASE WHEN (sector#513 = ) THEN cast(null as string) WHEN (sector#513 = null) THEN cast(null as string) ELSE sector#513 END AS sector#1128, CASE WHEN (frequency#533 = ) THEN cast(null as string) WHEN (frequency#533 = null) THEN cast(null as string) ELSE frequency#533 END AS frequency#1129]
+- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, value_type#459, fuel_type#476, region#494, sector#513, frequency#533]
   +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, fuel_type#476, region#494, sector#513, trim(split_name#157[4], None) AS frequency#533]
      +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, fuel_type#476, region#494, trim(split_name#157[3], None) AS sector#513]
         +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, fuel_type#476, trim(split_name#157[2], None) AS region#494]
            +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, value_type#459, trim(split_name#157[1], None) AS fuel_type#476]
               +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split_name#157, trim(split_name#157[0], None) AS value_type#459]
                  +- Filter series_id#14 RLIKE ^ELEC\.STOCKS\.|^ELEC\.RECEIPTS\.|^ELEC\.RECEIPTS_BTU\.|^ELEC\.COST\.|^ELEC\.COST_BTU\.
                     +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, split(name#9, :, -1) AS split_name#157]
                        +- Project [copyright#0, description#1, to_date(cast(unix_timestamp('end, yyyyMM, None) as timestamp), None) AS end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14]
                           +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, to_date(cast(unix_timestamp('start, yyyyMM, None) as timestamp), None) AS start#127, units#12, last_updated#82, series_id#14]
                              +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, cast(lat#97 as double) AS lon#112, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                 +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, cast(lat#6 as double) AS lat#97, lon#8, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                    +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, to_timestamp('last_updated, Some(yyyy-MM-dd'T'HH:mm:ssXXX)) AS last_updated#82, series_id#14]
                                       +- Filter isnotnull(series_id#14)
                                          +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14]
                                             +- Filter (f#3 = M)
                                                +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Optimized Logical Plan ==
Project [CASE WHEN (copyright#0 = ) THEN null WHEN (copyright#0 = null) THEN null ELSE copyright#0 END AS copyright#1116, CASE WHEN (description#1 = ) THEN null WHEN (description#1 = null) THEN null ELSE description#1 END AS description#1117, cast(cast(unix_timestamp(end#2, yyyyMM, Some(America/New_York)) as timestamp) as date) AS end#142, CASE WHEN (f#3 = ) THEN null WHEN (f#3 = null) THEN null ELSE f#3 END AS f#1118, CASE WHEN (geography#4 = ) THEN null WHEN (geography#4 = null) THEN null ELSE geography#4 END AS geography#1119, CASE WHEN (iso3166#5 = ) THEN null WHEN (iso3166#5 = null) THEN null ELSE iso3166#5 END AS iso3166#1120, cast(lat#6 as double) AS lat#97, cast(lat#6 as double) AS lon#112, CASE WHEN (name#9 = ) THEN null WHEN (name#9 = null) THEN null ELSE name#9 END AS name#1121, CASE WHEN (source#10 = ) THEN null WHEN (source#10 = null) THEN null ELSE source#10 END AS source#1122, cast(cast(unix_timestamp(start#11, yyyyMM, Some(America/New_York)) as timestamp) as date) AS start#127, CASE WHEN (units#12 = ) THEN null WHEN (units#12 = null) THEN null ELSE units#12 END AS units#1123, gettimestamp(last_updated#13, yyyy-MM-dd'T'HH:mm:ssXXX, Some(America/New_York)) AS last_updated#82, CASE WHEN (series_id#14 = ) THEN null WHEN (series_id#14 = null) THEN null ELSE series_id#14 END AS series_id#1124, CASE WHEN (trim(split(name#9, :, -1)[0], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[0], None) = null) THEN null ELSE trim(split(name#9, :, -1)[0], None) END AS value_type#1125, CASE WHEN (trim(split(name#9, :, -1)[1], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[1], None) = null) THEN null ELSE trim(split(name#9, :, -1)[1], None) END AS fuel_type#1126, CASE WHEN (trim(split(name#9, :, -1)[2], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[2], None) = null) THEN null ELSE trim(split(name#9, :, -1)[2], None) END AS region#1127, CASE WHEN (trim(split(name#9, :, -1)[3], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[3], None) = null) THEN null ELSE trim(split(name#9, :, -1)[3], None) END AS sector#1128, CASE WHEN (trim(split(name#9, :, -1)[4], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[4], None) = null) THEN null ELSE trim(split(name#9, :, -1)[4], None) END AS frequency#1129]
+- Filter (((isnotnull(f#3) AND (f#3 = M)) AND isnotnull(series_id#14)) AND series_id#14 RLIKE ^ELEC\.STOCKS\.|^ELEC\.RECEIPTS\.|^ELEC\.RECEIPTS_BTU\.|^ELEC\.COST\.|^ELEC\.COST_BTU\.)
   +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Physical Plan ==
*(1) Project [CASE WHEN (copyright#0 = ) THEN null WHEN (copyright#0 = null) THEN null ELSE copyright#0 END AS copyright#1116, CASE WHEN (description#1 = ) THEN null WHEN (description#1 = null) THEN null ELSE description#1 END AS description#1117, cast(cast(unix_timestamp(end#2, yyyyMM, Some(America/New_York)) as timestamp) as date) AS end#142, CASE WHEN (f#3 = ) THEN null WHEN (f#3 = null) THEN null ELSE f#3 END AS f#1118, CASE WHEN (geography#4 = ) THEN null WHEN (geography#4 = null) THEN null ELSE geography#4 END AS geography#1119, CASE WHEN (iso3166#5 = ) THEN null WHEN (iso3166#5 = null) THEN null ELSE iso3166#5 END AS iso3166#1120, cast(lat#6 as double) AS lat#97, cast(lat#6 as double) AS lon#112, CASE WHEN (name#9 = ) THEN null WHEN (name#9 = null) THEN null ELSE name#9 END AS name#1121, CASE WHEN (source#10 = ) THEN null WHEN (source#10 = null) THEN null ELSE source#10 END AS source#1122, cast(cast(unix_timestamp(start#11, yyyyMM, Some(America/New_York)) as timestamp) as date) AS start#127, CASE WHEN (units#12 = ) THEN null WHEN (units#12 = null) THEN null ELSE units#12 END AS units#1123, gettimestamp(last_updated#13, yyyy-MM-dd'T'HH:mm:ssXXX, Some(America/New_York)) AS last_updated#82, CASE WHEN (series_id#14 = ) THEN null WHEN (series_id#14 = null) THEN null ELSE series_id#14 END AS series_id#1124, CASE WHEN (trim(split(name#9, :, -1)[0], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[0], None) = null) THEN null ELSE trim(split(name#9, :, -1)[0], None) END AS value_type#1125, CASE WHEN (trim(split(name#9, :, -1)[1], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[1], None) = null) THEN null ELSE trim(split(name#9, :, -1)[1], None) END AS fuel_type#1126, CASE WHEN (trim(split(name#9, :, -1)[2], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[2], None) = null) THEN null ELSE trim(split(name#9, :, -1)[2], None) END AS region#1127, CASE WHEN (trim(split(name#9, :, -1)[3], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[3], None) = null) THEN null ELSE trim(split(name#9, :, -1)[3], None) END AS sector#1128, CASE WHEN (trim(split(name#9, :, -1)[4], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[4], None) = null) THEN null ELSE trim(split(name#9, :, -1)[4], None) END AS frequency#1129]
+- *(1) Filter (((isnotnull(f#3) AND (f#3 = M)) AND isnotnull(series_id#14)) AND series_id#14 RLIKE ^ELEC\.STOCKS\.|^ELEC\.RECEIPTS\.|^ELEC\.RECEIPTS_BTU\.|^ELEC\.COST\.|^ELEC\.COST_BTU\.)
   +- FileScan json [copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,name#9,source#10,start#11,units#12,last_updated#13,series_id#14] Batched: false, DataFilters: [isnotnull(f#3), (f#3 = M), isnotnull(series_id#14), series_id#14 RLIKE ^ELEC\.STOCKS\.|^ELEC\.RE..., Format: JSON, Location: InMemoryFileIndex[hdfs://localhost:9000/EIAElec/ELEC.json], PartitionFilters: [], PushedFilters: [IsNotNull(f), EqualTo(f,M), IsNotNull(series_id)], ReadSchema: struct<copyright:string,description:string,end:string,f:string,geography:string,iso3166:string,la...
