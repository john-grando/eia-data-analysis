== Parsed Logical Plan ==
Project [CASE WHEN (copyright#0 = ) THEN cast(null as string) WHEN (copyright#0 = null) THEN cast(null as string) ELSE copyright#0 END AS copyright#330, CASE WHEN (description#1 = ) THEN cast(null as string) WHEN (description#1 = null) THEN cast(null as string) ELSE description#1 END AS description#331, end#142, CASE WHEN (f#3 = ) THEN cast(null as string) WHEN (f#3 = null) THEN cast(null as string) ELSE f#3 END AS f#332, CASE WHEN (geography#4 = ) THEN cast(null as string) WHEN (geography#4 = null) THEN cast(null as string) ELSE geography#4 END AS geography#333, CASE WHEN (iso3166#5 = ) THEN cast(null as string) WHEN (iso3166#5 = null) THEN cast(null as string) ELSE iso3166#5 END AS iso3166#334, lat#97, lon#112, CASE WHEN (name#9 = ) THEN cast(null as string) WHEN (name#9 = null) THEN cast(null as string) ELSE name#9 END AS name#335, CASE WHEN (source#10 = ) THEN cast(null as string) WHEN (source#10 = null) THEN cast(null as string) ELSE source#10 END AS source#336, start#127, CASE WHEN (units#12 = ) THEN cast(null as string) WHEN (units#12 = null) THEN cast(null as string) ELSE units#12 END AS units#337, last_updated#82, CASE WHEN (series_id#14 = ) THEN cast(null as string) WHEN (series_id#14 = null) THEN cast(null as string) ELSE series_id#14 END AS series_id#338, CASE WHEN (state#157 = ) THEN cast(null as string) WHEN (state#157 = null) THEN cast(null as string) ELSE state#157 END AS state#339, CASE WHEN (value_type#190 = ) THEN cast(null as string) WHEN (value_type#190 = null) THEN cast(null as string) ELSE value_type#190 END AS value_type#340, CASE WHEN (plant_name#208 = ) THEN cast(null as string) WHEN (plant_name#208 = null) THEN cast(null as string) ELSE plant_name#208 END AS plant_name#341, CASE WHEN (fuel_type#227 = ) THEN cast(null as string) WHEN (fuel_type#227 = null) THEN cast(null as string) ELSE fuel_type#227 END AS fuel_type#342, CASE WHEN (engine_type#247 = ) THEN cast(null as string) WHEN (engine_type#247 = null) THEN cast(null as string) ELSE engine_type#247 END AS engine_type#343, CASE WHEN (plant_id#268 = ) THEN cast(null as string) WHEN (plant_id#268 = null) THEN cast(null as string) ELSE plant_id#268 END AS plant_id#344]
+- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, value_type#190, plant_name#208, fuel_type#227, engine_type#247, plant_id#268]
   +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, plant_name#208, fuel_type#227, engine_type#247, regexp_extract(series_id#14, .*\.(\d+)-.*, 1) AS plant_id#268]
      +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, plant_name#208, fuel_type#227, trim(split_name#173[3], None) AS engine_type#247]
         +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, plant_name#208, trim(split_name#173[2], None) AS fuel_type#227]
            +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, trim(split_name#173[1], None) AS plant_name#208]
               +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, trim(split_name#173[0], None) AS value_type#190]
                  +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split(name#9, :, -1) AS split_name#173]
                     +- Filter name#9 RLIKE Fuel consumption MMBtu|Net generation
                        +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, regexp_extract(iso3166#5, .*-(.*)$, 1) AS state#157]
                           +- Project [copyright#0, description#1, cast(end#2 as int) AS end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14]
                              +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, cast(start#11 as int) AS start#127, units#12, last_updated#82, series_id#14]
                                 +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, cast(lat#97 as double) AS lon#112, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                    +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, cast(lat#6 as double) AS lat#97, lon#8, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                       +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, to_timestamp('last_updated, Some(yyyy-MM-dd'T'HH:mm:ssXXX)) AS last_updated#82, series_id#14]
                                          +- Filter isnotnull(series_id#14)
                                             +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14]
                                                +- Filter (f#3 = M)
                                                   +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Analyzed Logical Plan ==
copyright: string, description: string, end: int, f: string, geography: string, iso3166: string, lat: double, lon: double, name: string, source: string, start: int, units: string, last_updated: timestamp, series_id: string, state: string, value_type: string, plant_name: string, fuel_type: string, engine_type: string, plant_id: string
Project [CASE WHEN (copyright#0 = ) THEN cast(null as string) WHEN (copyright#0 = null) THEN cast(null as string) ELSE copyright#0 END AS copyright#330, CASE WHEN (description#1 = ) THEN cast(null as string) WHEN (description#1 = null) THEN cast(null as string) ELSE description#1 END AS description#331, end#142, CASE WHEN (f#3 = ) THEN cast(null as string) WHEN (f#3 = null) THEN cast(null as string) ELSE f#3 END AS f#332, CASE WHEN (geography#4 = ) THEN cast(null as string) WHEN (geography#4 = null) THEN cast(null as string) ELSE geography#4 END AS geography#333, CASE WHEN (iso3166#5 = ) THEN cast(null as string) WHEN (iso3166#5 = null) THEN cast(null as string) ELSE iso3166#5 END AS iso3166#334, lat#97, lon#112, CASE WHEN (name#9 = ) THEN cast(null as string) WHEN (name#9 = null) THEN cast(null as string) ELSE name#9 END AS name#335, CASE WHEN (source#10 = ) THEN cast(null as string) WHEN (source#10 = null) THEN cast(null as string) ELSE source#10 END AS source#336, start#127, CASE WHEN (units#12 = ) THEN cast(null as string) WHEN (units#12 = null) THEN cast(null as string) ELSE units#12 END AS units#337, last_updated#82, CASE WHEN (series_id#14 = ) THEN cast(null as string) WHEN (series_id#14 = null) THEN cast(null as string) ELSE series_id#14 END AS series_id#338, CASE WHEN (state#157 = ) THEN cast(null as string) WHEN (state#157 = null) THEN cast(null as string) ELSE state#157 END AS state#339, CASE WHEN (value_type#190 = ) THEN cast(null as string) WHEN (value_type#190 = null) THEN cast(null as string) ELSE value_type#190 END AS value_type#340, CASE WHEN (plant_name#208 = ) THEN cast(null as string) WHEN (plant_name#208 = null) THEN cast(null as string) ELSE plant_name#208 END AS plant_name#341, CASE WHEN (fuel_type#227 = ) THEN cast(null as string) WHEN (fuel_type#227 = null) THEN cast(null as string) ELSE fuel_type#227 END AS fuel_type#342, CASE WHEN (engine_type#247 = ) THEN cast(null as string) WHEN (engine_type#247 = null) THEN cast(null as string) ELSE engine_type#247 END AS engine_type#343, CASE WHEN (plant_id#268 = ) THEN cast(null as string) WHEN (plant_id#268 = null) THEN cast(null as string) ELSE plant_id#268 END AS plant_id#344]
+- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, value_type#190, plant_name#208, fuel_type#227, engine_type#247, plant_id#268]
   +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, plant_name#208, fuel_type#227, engine_type#247, regexp_extract(series_id#14, .*\.(\d+)-.*, 1) AS plant_id#268]
      +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, plant_name#208, fuel_type#227, trim(split_name#173[3], None) AS engine_type#247]
         +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, plant_name#208, trim(split_name#173[2], None) AS fuel_type#227]
            +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, value_type#190, trim(split_name#173[1], None) AS plant_name#208]
               +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split_name#173, trim(split_name#173[0], None) AS value_type#190]
                  +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, state#157, split(name#9, :, -1) AS split_name#173]
                     +- Filter name#9 RLIKE Fuel consumption MMBtu|Net generation
                        +- Project [copyright#0, description#1, end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14, regexp_extract(iso3166#5, .*-(.*)$, 1) AS state#157]
                           +- Project [copyright#0, description#1, cast(end#2 as int) AS end#142, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, start#127, units#12, last_updated#82, series_id#14]
                              +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, lon#112, name#9, source#10, cast(start#11 as int) AS start#127, units#12, last_updated#82, series_id#14]
                                 +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#97, cast(lat#97 as double) AS lon#112, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                    +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, cast(lat#6 as double) AS lat#97, lon#8, name#9, source#10, start#11, units#12, last_updated#82, series_id#14]
                                       +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, to_timestamp('last_updated, Some(yyyy-MM-dd'T'HH:mm:ssXXX)) AS last_updated#82, series_id#14]
                                          +- Filter isnotnull(series_id#14)
                                             +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14]
                                                +- Filter (f#3 = M)
                                                   +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Optimized Logical Plan ==
Project [CASE WHEN (copyright#0 = ) THEN null WHEN (copyright#0 = null) THEN null ELSE copyright#0 END AS copyright#330, CASE WHEN (description#1 = ) THEN null WHEN (description#1 = null) THEN null ELSE description#1 END AS description#331, cast(end#2 as int) AS end#142, CASE WHEN (f#3 = ) THEN null WHEN (f#3 = null) THEN null ELSE f#3 END AS f#332, CASE WHEN (geography#4 = ) THEN null WHEN (geography#4 = null) THEN null ELSE geography#4 END AS geography#333, CASE WHEN (iso3166#5 = ) THEN null WHEN (iso3166#5 = null) THEN null ELSE iso3166#5 END AS iso3166#334, cast(lat#6 as double) AS lat#97, cast(lat#6 as double) AS lon#112, CASE WHEN (name#9 = ) THEN null WHEN (name#9 = null) THEN null ELSE name#9 END AS name#335, CASE WHEN (source#10 = ) THEN null WHEN (source#10 = null) THEN null ELSE source#10 END AS source#336, cast(start#11 as int) AS start#127, CASE WHEN (units#12 = ) THEN null WHEN (units#12 = null) THEN null ELSE units#12 END AS units#337, gettimestamp(last_updated#13, yyyy-MM-dd'T'HH:mm:ssXXX, Some(America/New_York)) AS last_updated#82, CASE WHEN (series_id#14 = ) THEN null WHEN (series_id#14 = null) THEN null ELSE series_id#14 END AS series_id#338, CASE WHEN (regexp_extract(iso3166#5, .*-(.*)$, 1) = ) THEN null WHEN (regexp_extract(iso3166#5, .*-(.*)$, 1) = null) THEN null ELSE regexp_extract(iso3166#5, .*-(.*)$, 1) END AS state#339, CASE WHEN (trim(split(name#9, :, -1)[0], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[0], None) = null) THEN null ELSE trim(split(name#9, :, -1)[0], None) END AS value_type#340, CASE WHEN (trim(split(name#9, :, -1)[1], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[1], None) = null) THEN null ELSE trim(split(name#9, :, -1)[1], None) END AS plant_name#341, CASE WHEN (trim(split(name#9, :, -1)[2], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[2], None) = null) THEN null ELSE trim(split(name#9, :, -1)[2], None) END AS fuel_type#342, CASE WHEN (trim(split(name#9, :, -1)[3], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[3], None) = null) THEN null ELSE trim(split(name#9, :, -1)[3], None) END AS engine_type#343, CASE WHEN (regexp_extract(series_id#14, .*\.(\d+)-.*, 1) = ) THEN null WHEN (regexp_extract(series_id#14, .*\.(\d+)-.*, 1) = null) THEN null ELSE regexp_extract(series_id#14, .*\.(\d+)-.*, 1) END AS plant_id#344]
+- Filter ((((isnotnull(name#9) AND isnotnull(f#3)) AND (f#3 = M)) AND isnotnull(series_id#14)) AND name#9 RLIKE Fuel consumption MMBtu|Net generation)
   +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Physical Plan ==
*(1) Project [CASE WHEN (copyright#0 = ) THEN null WHEN (copyright#0 = null) THEN null ELSE copyright#0 END AS copyright#330, CASE WHEN (description#1 = ) THEN null WHEN (description#1 = null) THEN null ELSE description#1 END AS description#331, cast(end#2 as int) AS end#142, CASE WHEN (f#3 = ) THEN null WHEN (f#3 = null) THEN null ELSE f#3 END AS f#332, CASE WHEN (geography#4 = ) THEN null WHEN (geography#4 = null) THEN null ELSE geography#4 END AS geography#333, CASE WHEN (iso3166#5 = ) THEN null WHEN (iso3166#5 = null) THEN null ELSE iso3166#5 END AS iso3166#334, cast(lat#6 as double) AS lat#97, cast(lat#6 as double) AS lon#112, CASE WHEN (name#9 = ) THEN null WHEN (name#9 = null) THEN null ELSE name#9 END AS name#335, CASE WHEN (source#10 = ) THEN null WHEN (source#10 = null) THEN null ELSE source#10 END AS source#336, cast(start#11 as int) AS start#127, CASE WHEN (units#12 = ) THEN null WHEN (units#12 = null) THEN null ELSE units#12 END AS units#337, gettimestamp(last_updated#13, yyyy-MM-dd'T'HH:mm:ssXXX, Some(America/New_York)) AS last_updated#82, CASE WHEN (series_id#14 = ) THEN null WHEN (series_id#14 = null) THEN null ELSE series_id#14 END AS series_id#338, CASE WHEN (regexp_extract(iso3166#5, .*-(.*)$, 1) = ) THEN null WHEN (regexp_extract(iso3166#5, .*-(.*)$, 1) = null) THEN null ELSE regexp_extract(iso3166#5, .*-(.*)$, 1) END AS state#339, CASE WHEN (trim(split(name#9, :, -1)[0], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[0], None) = null) THEN null ELSE trim(split(name#9, :, -1)[0], None) END AS value_type#340, CASE WHEN (trim(split(name#9, :, -1)[1], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[1], None) = null) THEN null ELSE trim(split(name#9, :, -1)[1], None) END AS plant_name#341, CASE WHEN (trim(split(name#9, :, -1)[2], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[2], None) = null) THEN null ELSE trim(split(name#9, :, -1)[2], None) END AS fuel_type#342, CASE WHEN (trim(split(name#9, :, -1)[3], None) = ) THEN null WHEN (trim(split(name#9, :, -1)[3], None) = null) THEN null ELSE trim(split(name#9, :, -1)[3], None) END AS engine_type#343, CASE WHEN (regexp_extract(series_id#14, .*\.(\d+)-.*, 1) = ) THEN null WHEN (regexp_extract(series_id#14, .*\.(\d+)-.*, 1) = null) THEN null ELSE regexp_extract(series_id#14, .*\.(\d+)-.*, 1) END AS plant_id#344]
+- *(1) Filter ((((isnotnull(name#9) AND isnotnull(f#3)) AND (f#3 = M)) AND isnotnull(series_id#14)) AND name#9 RLIKE Fuel consumption MMBtu|Net generation)
   +- FileScan json [copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,name#9,source#10,start#11,units#12,last_updated#13,series_id#14] Batched: false, DataFilters: [isnotnull(name#9), isnotnull(f#3), (f#3 = M), isnotnull(series_id#14), name#9 RLIKE Fuel consump..., Format: JSON, Location: InMemoryFileIndex[hdfs://localhost:9000/EIAElec/ELEC.json], PartitionFilters: [], PushedFilters: [IsNotNull(name), IsNotNull(f), EqualTo(f,M), IsNotNull(series_id)], ReadSchema: struct<copyright:string,description:string,end:string,f:string,geography:string,iso3166:string,la...
