== Parsed Logical Plan ==
Project [CASE WHEN (copyright#0 = ) THEN cast(null as string) WHEN (copyright#0 = null) THEN cast(null as string) ELSE copyright#0 END AS copyright#126, CASE WHEN (description#1 = ) THEN cast(null as string) WHEN (description#1 = null) THEN cast(null as string) ELSE description#1 END AS description#127, CASE WHEN (end#2 = ) THEN cast(null as string) WHEN (end#2 = null) THEN cast(null as string) ELSE end#2 END AS end#128, CASE WHEN (f#3 = ) THEN cast(null as string) WHEN (f#3 = null) THEN cast(null as string) ELSE f#3 END AS f#129, CASE WHEN (geography#4 = ) THEN cast(null as string) WHEN (geography#4 = null) THEN cast(null as string) ELSE geography#4 END AS geography#130, CASE WHEN (iso3166#5 = ) THEN cast(null as string) WHEN (iso3166#5 = null) THEN cast(null as string) ELSE iso3166#5 END AS iso3166#131, CASE WHEN (lat#6 = ) THEN cast(null as string) WHEN (lat#6 = null) THEN cast(null as string) ELSE lat#6 END AS lat#132, CASE WHEN (lon#8 = ) THEN cast(null as string) WHEN (lon#8 = null) THEN cast(null as string) ELSE lon#8 END AS lon#133, CASE WHEN (name#9 = ) THEN cast(null as string) WHEN (name#9 = null) THEN cast(null as string) ELSE name#9 END AS name#134, CASE WHEN (source#10 = ) THEN cast(null as string) WHEN (source#10 = null) THEN cast(null as string) ELSE source#10 END AS source#135, CASE WHEN (start#11 = ) THEN cast(null as string) WHEN (start#11 = null) THEN cast(null as string) ELSE start#11 END AS start#136, CASE WHEN (units#12 = ) THEN cast(null as string) WHEN (units#12 = null) THEN cast(null as string) ELSE units#12 END AS units#137, last_updated#97, CASE WHEN (series_id#14 = ) THEN cast(null as string) WHEN (series_id#14 = null) THEN cast(null as string) ELSE series_id#14 END AS series_id#138]
+- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, to_utc_timestamp(to_timestamp('last_updated, None), regexp_extract(last_updated#13, .*((\+|-)[\d:]+), 1)) AS last_updated#97, series_id#14]
   +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14]
      +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14, data#15]
         +- Filter (f#3 = M)
            +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Analyzed Logical Plan ==
copyright: string, description: string, end: string, f: string, geography: string, iso3166: string, lat: string, lon: string, name: string, source: string, start: string, units: string, last_updated: timestamp, series_id: string
Project [CASE WHEN (copyright#0 = ) THEN cast(null as string) WHEN (copyright#0 = null) THEN cast(null as string) ELSE copyright#0 END AS copyright#126, CASE WHEN (description#1 = ) THEN cast(null as string) WHEN (description#1 = null) THEN cast(null as string) ELSE description#1 END AS description#127, CASE WHEN (end#2 = ) THEN cast(null as string) WHEN (end#2 = null) THEN cast(null as string) ELSE end#2 END AS end#128, CASE WHEN (f#3 = ) THEN cast(null as string) WHEN (f#3 = null) THEN cast(null as string) ELSE f#3 END AS f#129, CASE WHEN (geography#4 = ) THEN cast(null as string) WHEN (geography#4 = null) THEN cast(null as string) ELSE geography#4 END AS geography#130, CASE WHEN (iso3166#5 = ) THEN cast(null as string) WHEN (iso3166#5 = null) THEN cast(null as string) ELSE iso3166#5 END AS iso3166#131, CASE WHEN (lat#6 = ) THEN cast(null as string) WHEN (lat#6 = null) THEN cast(null as string) ELSE lat#6 END AS lat#132, CASE WHEN (lon#8 = ) THEN cast(null as string) WHEN (lon#8 = null) THEN cast(null as string) ELSE lon#8 END AS lon#133, CASE WHEN (name#9 = ) THEN cast(null as string) WHEN (name#9 = null) THEN cast(null as string) ELSE name#9 END AS name#134, CASE WHEN (source#10 = ) THEN cast(null as string) WHEN (source#10 = null) THEN cast(null as string) ELSE source#10 END AS source#135, CASE WHEN (start#11 = ) THEN cast(null as string) WHEN (start#11 = null) THEN cast(null as string) ELSE start#11 END AS start#136, CASE WHEN (units#12 = ) THEN cast(null as string) WHEN (units#12 = null) THEN cast(null as string) ELSE units#12 END AS units#137, last_updated#97, CASE WHEN (series_id#14 = ) THEN cast(null as string) WHEN (series_id#14 = null) THEN cast(null as string) ELSE series_id#14 END AS series_id#138]
+- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, to_utc_timestamp(to_timestamp('last_updated, None), regexp_extract(last_updated#13, .*((\+|-)[\d:]+), 1)) AS last_updated#97, series_id#14]
   +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14]
      +- Project [copyright#0, description#1, end#2, f#3, geography#4, iso3166#5, lat#6, lon#8, name#9, source#10, start#11, units#12, last_updated#13, series_id#14, data#15]
         +- Filter (f#3 = M)
            +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Optimized Logical Plan ==
Project [CASE WHEN (copyright#0 = ) THEN null WHEN (copyright#0 = null) THEN null ELSE copyright#0 END AS copyright#126, CASE WHEN (description#1 = ) THEN null WHEN (description#1 = null) THEN null ELSE description#1 END AS description#127, CASE WHEN (end#2 = ) THEN null WHEN (end#2 = null) THEN null ELSE end#2 END AS end#128, CASE WHEN (f#3 = ) THEN null WHEN (f#3 = null) THEN null ELSE f#3 END AS f#129, CASE WHEN (geography#4 = ) THEN null WHEN (geography#4 = null) THEN null ELSE geography#4 END AS geography#130, CASE WHEN (iso3166#5 = ) THEN null WHEN (iso3166#5 = null) THEN null ELSE iso3166#5 END AS iso3166#131, CASE WHEN (lat#6 = ) THEN null WHEN (lat#6 = null) THEN null ELSE lat#6 END AS lat#132, CASE WHEN (lon#8 = ) THEN null WHEN (lon#8 = null) THEN null ELSE lon#8 END AS lon#133, CASE WHEN (name#9 = ) THEN null WHEN (name#9 = null) THEN null ELSE name#9 END AS name#134, CASE WHEN (source#10 = ) THEN null WHEN (source#10 = null) THEN null ELSE source#10 END AS source#135, CASE WHEN (start#11 = ) THEN null WHEN (start#11 = null) THEN null ELSE start#11 END AS start#136, CASE WHEN (units#12 = ) THEN null WHEN (units#12 = null) THEN null ELSE units#12 END AS units#137, to_utc_timestamp(cast(last_updated#13 as timestamp), regexp_extract(last_updated#13, .*((\+|-)[\d:]+), 1)) AS last_updated#97, CASE WHEN (series_id#14 = ) THEN null WHEN (series_id#14 = null) THEN null ELSE series_id#14 END AS series_id#138]
+- Filter (isnotnull(f#3) AND (f#3 = M))
   +- Relation[copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,latlon#7,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14,data#15] json

== Physical Plan ==
*(1) Project [CASE WHEN (copyright#0 = ) THEN null WHEN (copyright#0 = null) THEN null ELSE copyright#0 END AS copyright#126, CASE WHEN (description#1 = ) THEN null WHEN (description#1 = null) THEN null ELSE description#1 END AS description#127, CASE WHEN (end#2 = ) THEN null WHEN (end#2 = null) THEN null ELSE end#2 END AS end#128, CASE WHEN (f#3 = ) THEN null WHEN (f#3 = null) THEN null ELSE f#3 END AS f#129, CASE WHEN (geography#4 = ) THEN null WHEN (geography#4 = null) THEN null ELSE geography#4 END AS geography#130, CASE WHEN (iso3166#5 = ) THEN null WHEN (iso3166#5 = null) THEN null ELSE iso3166#5 END AS iso3166#131, CASE WHEN (lat#6 = ) THEN null WHEN (lat#6 = null) THEN null ELSE lat#6 END AS lat#132, CASE WHEN (lon#8 = ) THEN null WHEN (lon#8 = null) THEN null ELSE lon#8 END AS lon#133, CASE WHEN (name#9 = ) THEN null WHEN (name#9 = null) THEN null ELSE name#9 END AS name#134, CASE WHEN (source#10 = ) THEN null WHEN (source#10 = null) THEN null ELSE source#10 END AS source#135, CASE WHEN (start#11 = ) THEN null WHEN (start#11 = null) THEN null ELSE start#11 END AS start#136, CASE WHEN (units#12 = ) THEN null WHEN (units#12 = null) THEN null ELSE units#12 END AS units#137, to_utc_timestamp(cast(last_updated#13 as timestamp), regexp_extract(last_updated#13, .*((\+|-)[\d:]+), 1)) AS last_updated#97, CASE WHEN (series_id#14 = ) THEN null WHEN (series_id#14 = null) THEN null ELSE series_id#14 END AS series_id#138]
+- *(1) Filter (isnotnull(f#3) AND (f#3 = M))
   +- FileScan json [copyright#0,description#1,end#2,f#3,geography#4,iso3166#5,lat#6,lon#8,name#9,source#10,start#11,units#12,last_updated#13,series_id#14] Batched: false, DataFilters: [isnotnull(f#3), (f#3 = M)], Format: JSON, Location: InMemoryFileIndex[hdfs://localhost:9000/EIAElec/ELEC.json], PartitionFilters: [], PushedFilters: [IsNotNull(f), EqualTo(f,M)], ReadSchema: struct<copyright:string,description:string,end:string,f:string,geography:string,iso3166:string,la...
